// Mocks generated by Mockito 5.3.0 from annotations
// in oauth_chopper/test/oauth_authenticator_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:oauth_chopper/src/oauth_authenticator.dart' as _i3;
import 'package:oauth_chopper/src/oauth_chopper.dart' as _i5;
import 'package:oauth_chopper/src/oauth_grant.dart' as _i7;
import 'package:oauth_chopper/src/oauth_interceptor.dart' as _i2;
import 'package:oauth_chopper/src/oauth_token.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUri_0 extends _i1.SmartFake implements Uri {
  _FakeUri_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeOAuthInterceptor_1 extends _i1.SmartFake
    implements _i2.OAuthInterceptor {
  _FakeOAuthInterceptor_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeOAuthAuthenticator_2 extends _i1.SmartFake
    implements _i3.OAuthAuthenticator {
  _FakeOAuthAuthenticator_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeOAuthToken_3 extends _i1.SmartFake implements _i4.OAuthToken {
  _FakeOAuthToken_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [OAuthChopper].
///
/// See the documentation for Mockito's code generation for more information.
class MockOAuthChopper extends _i1.Mock implements _i5.OAuthChopper {
  MockOAuthChopper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Uri get authorizationEndpoint => (super.noSuchMethod(
      Invocation.getter(#authorizationEndpoint),
      returnValue:
          _FakeUri_0(this, Invocation.getter(#authorizationEndpoint))) as Uri);
  @override
  String get identifier =>
      (super.noSuchMethod(Invocation.getter(#identifier), returnValue: '')
          as String);
  @override
  String get secret =>
      (super.noSuchMethod(Invocation.getter(#secret), returnValue: '')
          as String);
  @override
  _i6.Future<_i4.OAuthToken?> get token =>
      (super.noSuchMethod(Invocation.getter(#token),
              returnValue: _i6.Future<_i4.OAuthToken?>.value())
          as _i6.Future<_i4.OAuthToken?>);
  @override
  _i2.OAuthInterceptor get interceptor => (super.noSuchMethod(
          Invocation.getter(#interceptor),
          returnValue:
              _FakeOAuthInterceptor_1(this, Invocation.getter(#interceptor)))
      as _i2.OAuthInterceptor);
  @override
  _i3.OAuthAuthenticator authenticator({_i3.OnErrorCallback? onError}) => (super
          .noSuchMethod(
              Invocation.method(#authenticator, [], {#onError: onError}),
              returnValue: _FakeOAuthAuthenticator_2(this,
                  Invocation.method(#authenticator, [], {#onError: onError})))
      as _i3.OAuthAuthenticator);
  @override
  _i6.Future<_i4.OAuthToken?> refresh() =>
      (super.noSuchMethod(Invocation.method(#refresh, []),
              returnValue: _i6.Future<_i4.OAuthToken?>.value())
          as _i6.Future<_i4.OAuthToken?>);
  @override
  _i6.Future<_i4.OAuthToken> requestGrant(_i7.OAuthGrant? grant) =>
      (super.noSuchMethod(Invocation.method(#requestGrant, [grant]),
              returnValue: _i6.Future<_i4.OAuthToken>.value(_FakeOAuthToken_3(
                  this, Invocation.method(#requestGrant, [grant]))))
          as _i6.Future<_i4.OAuthToken>);
}
